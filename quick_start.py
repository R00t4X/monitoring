#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
–°–æ–∑–¥–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
"""

import os
import sys
import subprocess
import platform

def main():
    print("üöÄ –ë–´–°–¢–†–´–ô –ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´ –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê")
    print("=" * 50)
    
    script_dir = os.path.dirname(os.path.abspath(__file__))
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É Python
    if platform.system() == "Windows":
        python_cmd = "python"
    else:
        python_cmd = "python3"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
    try:
        result = subprocess.run([python_cmd, "--version"], 
                              capture_output=True, text=True)
        if result.returncode == 0:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω Python: {result.stdout.strip()}")
        else:
            print("‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return False
    except FileNotFoundError:
        print("‚ùå Python –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!")
        return False
    
    print("\nüîß –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–Ω–∞—Å—Ç—Ä–æ–π–∫–∏...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–Ω–∞—Å—Ç—Ä–æ–π–∫—É
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–∏–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä Python
        subprocess.run([sys.executable, "-c", """
import subprocess
import sys
import os
import venv

print("üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞...")

# –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
venv_path = "monitoring_venv"
if not os.path.exists(venv_path):
    print("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    venv.create(venv_path, with_pip=True)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏
if os.name == 'nt':  # Windows
    python_exe = os.path.join(venv_path, "Scripts", "python.exe")
    pip_exe = os.path.join(venv_path, "Scripts", "pip.exe")
else:  # Unix/Linux/macOS
    python_exe = os.path.join(venv_path, "bin", "python")
    pip_exe = os.path.join(venv_path, "bin", "pip")

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
packages = ["Flask==2.3.3", "psutil==5.9.6", "py-cpuinfo==9.0.0"]
for package in packages:
    print(f"üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ {package}...")
    subprocess.run([pip_exe, "install", package], 
                  capture_output=True, check=True)

print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

# –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –µ—Å–ª–∏ app.py –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if not os.path.exists("app.py"):
    print("üìù –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    app_code = '''
from flask import Flask, jsonify, render_template_string
from datetime import datetime
import os

app = Flask(__name__)

HTML_TEMPLATE = \"\"\"
<!DOCTYPE html>
<html>
<head><title>–°–∏—Å—Ç–µ–º–∞ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞</title>
<style>
body{font-family:Arial;max-width:800px;margin:50px auto;padding:20px;background:linear-gradient(135deg,#667eea 0%,#764ba2 100%);min-height:100vh}
.container{background:white;padding:40px;border-radius:15px;box-shadow:0 10px 30px rgba(0,0,0,0.2);text-align:center}
h1{color:#333;margin-bottom:30px}.status{color:#28a745;font-weight:bold;font-size:1.2em}
.info{margin-top:30px;padding:20px;background:#f8f9fa;border-radius:8px}
</style></head>
<body>
<div class="container">
<h1>üñ•Ô∏è –°–∏—Å—Ç–µ–º–∞ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞</h1>
<p class="status">‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!</p>
<div class="info">
<h3>üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
<p>–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {{ time }}</p>
<p>–°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–Ω–æ</p>
<p>–ü–æ—Ä—Ç: 5000</p>
</div>
</div>
</body>
</html>
\"\"\"

@app.route('/')
def index():
    return render_template_string(HTML_TEMPLATE, 
                                time=datetime.now().strftime('%Y-%m-%d %H:%M:%S'))

@app.route('/api/health')
def health():
    return jsonify({
        'status': 'healthy',
        'time': datetime.now().strftime('%Y-%m-%d %H:%M:%S'),
        'message': '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'
    })

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ –Ω–∞ http://127.0.0.1:5000")
    app.run(host='127.0.0.1', port=5000, debug=True)
'''
    with open("app.py", "w", encoding="utf-8") as f:
        f.write(app_code)

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
subprocess.run([python_exe, "app.py"])
"""], cwd=script_dir)
        
    except KeyboardInterrupt:
        print("\nüõë –ó–∞–ø—É—Å–∫ –ø—Ä–µ—Ä–≤–∞–Ω")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    return True

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\nüõë –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞")
    finally:
        if platform.system() == "Windows":
            input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
